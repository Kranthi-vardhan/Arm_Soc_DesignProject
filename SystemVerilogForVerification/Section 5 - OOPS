Pass by value,
PAss by reference 
ref, const ref
  ////////////////////////pass by value//////////////////////
  
  task swap ( input bit [1:0] a, [1:0] b); 
    bit [1:0] temp;
    temp = a;
    a = b;
    b = temp;   
    $display("Value of a : %0d and b : %0d", a,b);
  endtask
  
  ///////////////////////pass by reference////////////////////
  
   task automatic swap ( ref bit [1:0] a, [1:0] b); /// function automatic bit [1:0] add (arguments);
    bit [1:0] temp;
    temp = a;
    a = b;
    b = temp;
    
    $display("Value of a : %0d and b : %0d", a,b);
  endtask
 
  
  //////////////restrict access to variables//////////////////////
  task automatic swap (const ref bit [1:0] a, ref bit [1:0] b); /// function automatic bit [1:0] add (arguments);
    bit [1:0] temp;
    
    temp = a;
  //  a = b;
    b = temp;
    
    $display("Value of a : %0d and b : %0d", a,b);
  endtask
  //////////////////////////////////////////////////////////////
  
  Just like private, in SV  we have local
  
  For copying the object 
  
  class first;
    int data;
  endclass
  
  module tb();
    first f1;
    first f2;
    initial begin
      f1 = new();
      f1.data = 24;
      f2 = new f1;
    end
  endmodule
  
  For Inheriting one class use:
   class A extends B;
  
